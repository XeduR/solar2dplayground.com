[
    {
        "title": "Empty",
        "code": "-- Here's an empty project for you to work with."
    },
    
    {
        "title": "Crate",
        "code": "-- Sample code by Eetu Rantanen\n\n-- Change the background to blue.\ndisplay.setDefault( \"background\", 0, 0.3, 0.8 )\n\n-- Require and start the physics engine.\nlocal physics = require(\"physics\")\nphysics.start()\nphysics.setGravity( 0, 98.1 ) -- Setting a very high gravity.\n\n-- Create a sword altar, the ground and a crate, and give them all physics bodies.\nlocal swordShape = { -2, -62, 9, -62, 49, 10, 49, 95, -40, 95, -40, 10 }\nlocal sword = display.newImage( \"img/alter.png\", 510, 490 )\nphysics.addBody( sword, \"static\", { density=12, friction=0.9, bounce=0, shape=swordShape } )\n\nlocal block = display.newImage( \"img/pushBlock3.png\", 480, 100 )\nphysics.addBody( block, \"dynamic\", { density=10, friction=2, bounce=0 } )\nblock.angularDamping = 3\n-- block:setFillColor( 1, 0, 0 ) -- Uncomment this line to apply red tint to the block.\n\nfor i = 1, 4 do\n\tlocal ground = display.newImage( \"img/platformBase2.png\", i*250-160, 630 )\n\tphysics.addBody( ground, \"static\", { density=1, friction=0.9, bounce=0 } )\nend\n\nlocal text = display.newText( \"Drag the block with your mouse\", 640, 40, native.systemFontBold, 40 )\n\nlocal function dragBlock( event, params )\n\tlocal body = event.target\n\tlocal phase = event.phase\n\tlocal stage = display.getCurrentStage()\n\n\tif \"began\" == phase then\n\t\tstage:setFocus( body )\n\t\tbody.isFocus = true\n\t\tbody.tempJoint = physics.newJoint( \"touch\", body, event.x, event.y )\n\n\telseif body.isFocus then\n\t\tif \"moved\" == phase then\n\t\t\tbody.tempJoint:setTarget( event.x, event.y )\n\n\t\telseif \"ended\" == phase or \"cancelled\" == phase then\n\t\t\tstage:setFocus( nil )\n\t\t\tbody.isFocus = false\t\n\t\t\tbody.tempJoint:removeSelf()\n\n\t\tend\n\tend\n\n\treturn true\nend\nblock:addEventListener( \"touch\", dragBlock )"
    },
    
    {
        "title": "Physics Typer",
        "code": "-- Sample code by Michael Wilson\n\n-- Change the background to grey\ndisplay.setDefault( \"background\", 0.1 )\n\nlocal x, y = display.contentCenterX, display.contentCenterY -- source of the letters\nlocal rnd = math.random\n\n-- Help text\ndisplay.newText( {text = \"Start typing...\", x = x, y = y/4, fontSize = 32 } )\n\n-- Require and start the physics engine\nlocal physics = require(\"physics\")\nphysics.start()\nphysics.setGravity( 0, 64 ) -- set gravity\n\nlocal ground = display.newRect(x,display.contentHeight, display.contentWidth * 2, 16)\nground.alpha = 0.25\nphysics.addBody(ground, \"static\")\n\n-- Text options\nlocal options = { x = x, y = y, fontSize = 128, font = native.systemFontBold }\n\n-- Called when a key event has been received.\nlocal function key( event )\n  if event.phase == \"up\" then\n    -- create the key you pressed\n    options.text = event.keyName:len() == 1 and event.keyName or \"?\" -- one letter keys only\n    local letter = display.newText( options )\n    -- render the text to a display object\n    local object = display.capture(letter)\n    -- add a premade shader\n    object.fill.effect = \"filter.colorChannelOffset\"\n    object.fill.effect.xTexels = 4\n    object.fill.effect.yTexels = 4\n    object:translate(x,y) -- move from 0,0\n    -- remove the letter\n    display.remove(letter)\n    -- let's give it a quick physics body\n    physics.addBody(object, { radius = 32, bounce = 0.5, friction = 0 } )\n    object.linearDamping = 1\n    object.angularDamping= 1\n    -- give it a push\n    object:applyLinearImpulse(rnd()-rnd(),-rnd()-rnd(),rnd(),rnd())\n    object.angularVelocity = object.angularVelocity * 0.025 -- cap spin speed\n  end\nend\n\n-- Add the key event\nRuntime:addEventListener( \"key\", key )"
    },
    
    {
        "title": "Flame",
        "code": "-- Sample code by Michael Wilson\n\n-- Change the background to grey\ndisplay.setDefault( \"background\", 0.1 )\n\nlocal x, y = display.contentCenterX, display.contentCenterY -- source of flame\nlocal rnd = math.random\n\n-- Run every frame\nlocal function enterFrame()\n  local flame = display.newCircle(x,y, math.random(32,64))\n  flame:setFillColor(rnd() + 0.5, rnd() + 0.2, 0)\n  flame.blendMode = \"add\"\n  flame.alpha = 0.5\n\n  -- kill the particle when done\n  local function die()\n    display.remove(flame)\n  end\n\n  -- start a transition\n  transition.to(flame, {\n      delta = true, -- move from current location\n      time = 1000, -- in 1.0 seconds\n      x = rnd(-16,16), -- wiggle\n      y = rnd(-384, -256), -- go up\n      xScale = -0.9, -- shrink\n      yScale = -0.9,\n      onComplete = die, -- and die\n      })\nend\n\n-- Called when a mouse event has been received.\nlocal function mouse( event )\n  x, y = event.x or x, event.y or y -- take a new x,y or keep the old x,y\nend\n\n-- Add the mouse and enterFrame events\nRuntime:addEventListener( \"mouse\", mouse )\nRuntime:addEventListener( \"enterFrame\", enterFrame )"
    }
]